#include <stdio.h>
#include <math.h>

#define MAX 5
#define MAX_TRACKS 200

int queue[MAX], head, seek = 0, n;

void sort(int arr[])
{
    int i, j, temp;
    for (i = 0; i < n - 1; i++)
    {
        for (j = i + 1; j < n; j++)
        {
            if (arr[i] > arr[j])
            {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

void CLOOK()
{
    int i, j, seek_time = 0, diff, index = 0;
    for (i = 0; i < n; i++)
    {
        diff = abs(head - queue[i]);
        if (diff < abs(head - queue[index]))
            index = i;
    }
    if (head <= queue[index])
    {
        for (i = index; i < n; i++)
        {
            seek_time += abs(head - queue[i]);
            head = queue[i];
        }
        head = 0;
        for (i = 0; i < index; i++)
        {
            seek_time += abs(head - queue[i]);
            head = queue[i];
        }
    }
    else
    {
        for (i = index; i >= 0; i--)
        {
            seek_time += abs(head - queue[i]);
            head = queue[i];
        }
        head = MAX_TRACKS - 1;
        for (i = n - 1; i > index; i--)
        {
            seek_time += abs(head - queue[i]);
            head = queue[i];
        }
    }
    printf("\nTotal Seek Time: %d\n", seek_time);
    printf("Average Seek Time: %f\n", (float)seek_time / n);
}

int main()
{
    int i, j;
    printf("Enter the size of Queue: ");
    scanf("%d", &n);
    printf("Enter the Queue: ");
    for (i = 0; i < n; i++)
        scanf("%d", &queue[i]);
    printf("Enter the initial head position: ");
    scanf("%d", &head);
    sort(queue);
    CLOOK();
    return 0;
}
